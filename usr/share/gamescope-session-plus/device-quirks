#!/bin/bash

# This file would be sourced by gamescope-session script (meant for
# ChimeraOS devices).
export LANG=en_US.UTF-8
SYS_ID="$(cat /sys/devices/virtual/dmi/id/product_name)"
CPU_VENDOR=$(cat /proc/cpuinfo | grep vendor_id | head -n 1 | cut -d : -f 2 | xargs)
CPU_MODEL=$(cat /proc/cpuinfo | grep "model name" | head -n 1 | cut -d : -f 2 | xargs)

# Source user configuration from ~/.config/environment.d
set -a
for i in "${HOME}"/.config/environment.d/*.conf; do
  [[ -f "${i}" ]] && . "${i}"
done
set +a

# --tap-to-click
: "${GAMESCOPE_TAP_TO_CLICK:=1}"
# --tap-to-drag
: "${GAMESCOPE_TAP_TO_DRAG:=1}"
# --drag-lock
: "${GAMESCOPE_TAP_DRAG_LOCK:=0}"

# --natural-scrolling xxx
# Natural scrolling for pointer devices
# none => No pointer device
# touchpad => Only for touchpad
# mouse => Only for mouse
# all => All pointer device
: "${GAMESCOPE_NATURAL_SCROLL:=touchpad}"

echo "GAMESCOPE_TAP_TO_CLICK: $GAMESCOPE_TAP_TO_CLICK" | systemd-cat -t gamescope-session
echo "GAMESCOPE_TAP_TO_DRAG: $GAMESCOPE_TAP_TO_DRAG" | systemd-cat -t gamescope-session
echo "GAMESCOPE_TAP_DRAG_LOCK: $GAMESCOPE_TAP_DRAG_LOCK" | systemd-cat -t gamescope-session
echo "GAMESCOPE_NATURAL_SCROLL: $GAMESCOPE_NATURAL_SCROLL" | systemd-cat -t gamescope-session

if (gamescope --help 2>&1 | grep -e "--tap-to-click" >/dev/null); then
  SUPPORT_TAP_TO_CLICK=true
fi

if (gamescope --help 2>&1 | grep -e "--generate-drm-mode-custom-dir" >/dev/null); then
  SUPPORT_CUSTOM_MODELINES=true
fi

if (gamescope --help 2>&1 | grep -e "--custom-refresh-rates" >/dev/null); then
  SUPPORT_CUSTOM_REFRESH_RATES=true
fi

CUSTOM_MODELINES_PARAM="--generate-drm-mode custom --generate-drm-mode-custom-dir /usr/share/gamescope-session-plus/modelines "

# OXP Devices
OXP_LIST="ONE XPLAYER:ONEXPLAYER 1 T08:ONEXPLAYER 1S A08:ONEXPLAYER 1S T08:ONEXPLAYER mini A07:ONEXPLAYER mini GA72:ONEXPLAYER mini GT72:ONEXPLAYER Mini Pro:ONEXPLAYER GUNDAM GA72:ONEXPLAYER 2 ARP23:ONEXPLAYER 2 PRO ARP23P:ONEXPLAYER 2 PRO ARP23P EVA-01"
AOK_LIST="AOKZOE A1 AR07:AOKZOE A1 Pro"
if [[ ":$OXP_LIST:" =~ ":$SYS_ID:" ]] || [[ ":$AOK_LIST:" =~ ":$SYS_ID:" ]]; then
  # Intel support is extremely experimental, this is the bare minimum to get the system to boot.
  # Dependent on a special --force-external-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-external-orientation" >/dev/null) && [[ "$CPU_VENDOR" =~ "GenuineIntel" ]]; then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-panel-type external \
      --force-external-orientation left "
  # Fallback method. Dependent on a special --force-orientation option in gamescope
  elif (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-orientation left "
  fi

  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 40-60"
  fi

  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=40,60
fi

# OXP 120hz Devices
OXP_120_LIST="ONEXPLAYER F1:ONEXPLAYER F1 EVA-01"
if [[ ":$OXP_120_LIST:" =~ ":$SYS_ID:" ]]; then
  export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-orientation left "

  if [[ -n "$SUPPORT_CUSTOM_MODELINES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD $CUSTOM_MODELINES_PARAM "
  else
    export GAMESCOPECMD="$GAMESCOPECMD --generate-drm-mode fixed "
  fi

  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=40,120
fi

# AYANEO AIR Devices
AIR_LIST="AIR:AIR Pro:AIR 1S:AIR 1S Limited"
if [[ ":$AIR_LIST:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-orientation left "
  fi
  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 40-60"
  fi
  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=40,60
fi

# AYANEO FLIP Devices
FLIP_LIST="FLIP KB:FLIP DS"
if [[ ":$FLIP_LIST:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-orientation left "
  fi
  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 60,80,90,100,110,120"
  fi
  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=40,120
fi

# AYANEO Plus
AIR_PLUS_LIST="AIR Plus:SLIDE"
if [[ ":$AIR_PLUS_LIST:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-orientation left "
  fi
  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 40-60"
  fi
  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=40,60
fi

# AYN Loki Devices
AYN_LIST="Loki Max:Loki Zero:Loki MiniPro"
if [[ ":$AYN_LIST:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-external-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-external-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-panel-type external \
      --force-external-orientation left "
  fi
  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 40-60"
  fi
  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=40,60
fi

# GDP Win devices
GDP_LIST="G1619-01:G1621-02:MicroPC:WIN2"
if [[ ":$GDP_LIST:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,DSI-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-orientation right "
  fi
fi

# GPD Win 3 specifc quirk to prevent crashing
# The GPD Win 3 does not support hardware rotation for 270/90 modes. We need to implement shader rotations to get this working correctly.
# 0/180 rotations should work.
if [[ ":G1618-03:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,DSI-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-orientation right "
  fi
fi

#GPD Win 4 supports 40-60hz refresh rate changing
if [[ ":G1618-04:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 "
  fi
  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 40-60"
  fi
  export STEAM_DISPLAY_REFRESH_LIMITS=40,60
fi

# GPD Win mini
if [[ ":G1617-01:" =~ ":$SYS_ID:" ]]; then
  model_name=$(cat /sys/class/drm/card1-eDP-1/edid | parse-edid 2>/dev/null | grep "ModelName" | cut -d \" -f 2)
  echo "Model Name: $model_name" | systemd-cat -t gamescope-session

  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null) && [[ "$model_name" == "TL070FVXS01-0" ]]; then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --adaptive-sync \
      --generate-drm-mode fixed \
      --force-orientation normal "

    # custom-refresh-rates
    if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 60,70,80,90,100,110,120"
    fi
  elif (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    # model_name is "MINI"
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --force-orientation right "

    if [[ -n "$SUPPORT_CUSTOM_MODELINES" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD $CUSTOM_MODELINES_PARAM "
    else
      export GAMESCOPECMD="$GAMESCOPECMD --generate-drm-mode fixed "
    fi

  fi
  export STEAM_DISPLAY_REFRESH_LIMITS=40,120

  # Pointer options
  if [[ -n "$SUPPORT_TAP_TO_CLICK" ]]; then
    if [[ "$GAMESCOPE_TAP_TO_CLICK" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --tap-to-click"
    fi
    if [[ "$GAMESCOPE_TAP_TO_DRAG" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --tap-to-drag"
    fi
    if [[ "$GAMESCOPE_TAP_DRAG_LOCK" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --drag-lock"
    fi
    export GAMESCOPECMD="$GAMESCOPECMD --natural-scrolling $GAMESCOPE_NATURAL_SCROLL"
  fi

fi

# GPD Win Max2
if [[ ":G1619-04:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 "
  fi
  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 40-60"
  fi
  export STEAM_DISPLAY_REFRESH_LIMITS=40,60

  # Pointer options
  if [[ -n "$SUPPORT_TAP_TO_CLICK" ]]; then
    if [[ "$GAMESCOPE_TAP_TO_CLICK" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --tap-to-click"
    fi
    if [[ "$GAMESCOPE_TAP_TO_DRAG" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --tap-to-drag"
    fi
    if [[ "$GAMESCOPE_TAP_DRAG_LOCK" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --drag-lock"
    fi
    export GAMESCOPECMD="$GAMESCOPECMD --natural-scrolling $GAMESCOPE_NATURAL_SCROLL"
  fi
fi

# Steam Deck
if [[ ":Jupiter:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 "
  fi
  export STEAM_DISPLAY_REFRESH_LIMITS=40,60
fi

# OLED Steam Deck
if [[ ":Galileo:" =~ ":$SYS_ID:" ]]; then
  # Dependent on a special --force-orientation option in gamescope
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --generate-drm-mode fixed \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 "
  fi
  export STEAM_DISPLAY_REFRESH_LIMITS=45,90
fi

# ROG Ally
ALLY_LIST="ROG Ally RC71L_RC71L:ROG Ally RC71L"
if [[ ":$ALLY_LIST:" =~ ":$SYS_ID:" ]]; then
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --adaptive-sync "
  fi

  # custom-refresh-rates
  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    # In fact, any value between 60 and 120 can be displayed normally.
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 60,70,80,90,100,110,120"
  fi

  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=40,120
fi

# Lenovo Legion Go
if [[ ":83E1:" =~ ":$SYS_ID:" ]]; then
  # Dependent on --force-orientation in gamescope-plus
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --adaptive-sync \
      --force-orientation left "
  fi

  if [[ -n "$SUPPORT_CUSTOM_MODELINES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD $CUSTOM_MODELINES_PARAM "
  else
    export GAMESCOPECMD="$GAMESCOPECMD --generate-drm-mode fixed "
  fi

  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=73,144
fi

# Minisforum V3
if [[ ":V3:" =~ ":$SYS_ID:" ]]; then
  # Dependent on --force-orientation in gamescope-plus
  if (gamescope --help 2>&1 | grep -e "--force-orientation" >/dev/null); then
    export GAMESCOPECMD="/usr/bin/gamescope \
      -e \
      --xwayland-count 2 \
      -O *,eDP-1 \
      --default-touch-mode 4 \
      --hide-cursor-delay 3000 \
      --fade-out-duration 200 \
      --adaptive-sync \
      --generate-drm-mode fixed "
  fi

  # custom-refresh-rates
  if [[ -n "$SUPPORT_CUSTOM_REFRESH_RATES" ]]; then
    export GAMESCOPECMD="$GAMESCOPECMD --custom-refresh-rates 60,90,100,120,144,165"
  fi

  # Set refresh rate range and enable refresh rate switching
  export STEAM_DISPLAY_REFRESH_LIMITS=40,165

  # Pointer options
  if [[ -n "$SUPPORT_TAP_TO_CLICK" ]]; then
    if [[ "$GAMESCOPE_TAP_TO_CLICK" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --tap-to-click"
    fi
    if [[ "$GAMESCOPE_TAP_TO_DRAG" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --tap-to-drag"
    fi
    if [[ "$GAMESCOPE_TAP_DRAG_LOCK" == "1" ]]; then
      export GAMESCOPECMD="$GAMESCOPECMD --drag-lock"
    fi
    export GAMESCOPECMD="$GAMESCOPECMD --natural-scrolling $GAMESCOPE_NATURAL_SCROLL"
  fi
fi
